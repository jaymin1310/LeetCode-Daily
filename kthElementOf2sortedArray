class Solution {
  public:
    int kthElement(vector<int>& a, vector<int>& b, int k) {
        // code here
        int n=a.size();
        int m=b.size();
        if(m<n)return kthElement(b,a,k);
        int low =max(0,k-m),high=min(k,n),mid;
        int lefttotal=k;
        while(low<=high){
            mid=(low+high)/2;
            int mid1=mid;
            int mid2=lefttotal-mid1;
            int l1=INT_MIN,l2=INT_MIN,r1=INT_MAX,r2=INT_MAX;
            if (mid1 < n) r1 = a[mid1];
            if (mid2 < m) r2 = b[mid2];
            if (mid1 - 1 >= 0) l1 = a[mid1 - 1];
            if (mid2 - 1 >= 0) l2 = b[mid2 - 1];
            if(l1<=r2 && l2<=r1){
                return max(l1,l2);
            }
            else if(l1>r2){
                high=mid-1;
            }
            else{
                low=mid+1;
            }
            
        }
        return 0;
    }
};
